@startuml
!include Style.puml
skinparam ArrowFontStyle plain

box Parser
participant ":Parser" as PARSER PARSER_COLOR
participant ":ParseResource*" as PARSERESOURCE PARSER_COLOR
participant ":ParseResource" as PARSE PARSER_COLOR
participant ":ParseAttribute" as PARSEATTRIBUTE PARSER_COLOR
end box

box Command
participant ":CommandResult" as COMMANDRESULT COMMAND_COLOR
participant ":AddCommand" as ADDCOMMAND COMMAND_COLOR
end box

participant ":CreateResource*" as CREATE CREATE_COLOR

activate PARSER PARSER_COLOR
PARSER -[PARSER_COLOR]> ADDCOMMAND : execute(input, container)
activate ADDCOMMAND COMMAND_COLOR

ADDCOMMAND -[COMMAND_COLOR]> PARSER : parseAddCommand(input)

PARSER -[PARSER_COLOR]> PARSER : checkFirstItem(input)
activate PARSER PARSER_COLOR
PARSER --[PARSER_COLOR]> PARSER : tag: String
deactivate PARSER

PARSER --[PARSER_COLOR]> ADDCOMMAND : tag: String

alt resource*
    ADDCOMMAND -[COMMAND_COLOR]> ADDCOMMAND : addResource*(input, container)
    activate ADDCOMMAND COMMAND_COLOR

    ADDCOMMAND -[COMMAND_COLOR]> PARSERESOURCE : parseAddResource*(input)
    activate PARSERESOURCE PARSER_COLOR

    PARSERESOURCE -[PARSER_COLOR]> PARSERESOURCE : parseResource*Args(input)
    activate PARSERESOURCE PARSER_COLOR

    PARSERESOURCE -[PARSER_COLOR]> PARSE : hasUnusedSlash(input)
    activate PARSE PARSER_COLOR
    PARSE --[PARSER_COLOR]> PARSERESOURCE : hasUnusedSlash: boolean
    deactivate PARSE

    PARSERESOURCE -[PARSER_COLOR]> PARSERESOURCE : hasInvalidArgurment(input)
    activate PARSERESOURCE PARSER_COLOR
    PARSERESOURCE --[PARSER_COLOR]> PARSERESOURCE : hasInvalidArgurment: boolean
    deactivate PARSERESOURCE

    PARSERESOURCE -[PARSER_COLOR]> PARSEATTRIBUTE : parseAttribute*(input)
    activate PARSEATTRIBUTE PARSER_COLOR

    PARSEATTRIBUTE -[PARSER_COLOR]> PARSERESOURCE : countDuplicate(input, pattern)
    activate PARSEATTRIBUTE PARSER_COLOR
    PARSERESOURCE --[PARSER_COLOR]> PARSEATTRIBUTE : hasDuplicate: int
    deactivate PARSEATTRIBUTE

    PARSEATTRIBUTE --[PARSER_COLOR]> PARSERESOURCE
    deactivate PARSEATTRIBUTE

    PARSERESOURCE --[PARSER_COLOR]> PARSERESOURCE : isOptionalMatching: Boolean[]
    deactivate PARSERESOURCE

    PARSERESOURCE -[PARSER_COLOR]> PARSERESOURCE : checkEmptyResource*Args(args)
    activate PARSERESOURCE PARSER_COLOR

    PARSERESOURCE -[PARSER_COLOR]> PARSERESOURCE : checkEmptyArg(args)
    activate PARSERESOURCE PARSER_COLOR
    PARSERESOURCE --[PARSER_COLOR]> PARSERESOURCE
    deactivate PARSERESOURCE

    PARSERESOURCE --[PARSER_COLOR]> PARSERESOURCE
    deactivate PARSERESOURCE

    PARSERESOURCE --[PARSER_COLOR]> ADDCOMMAND : values: String[]

    ADDCOMMAND -[COMMAND_COLOR]> CREATE : createResource*(values, resourceID)
    activate CREATE CREATE_COLOR
    CREATE --[CREATE_COLOR]> ADDCOMMAND : newResource*: Resource*
    deactivate CREATE

    ADDCOMMAND -[COMMAND_COLOR]> PARSERESOURCE : resetResource*Args()
    PARSERESOURCE --[PARSER_COLOR]> ADDCOMMAND
    deactivate PARSERESOURCE

    ADDCOMMAND --[COMMAND_COLOR]> ADDCOMMAND
    deactivate ADDCOMMAND

    create COMMANDRESULT
    ADDCOMMAND -[COMMAND_COLOR]> COMMANDRESULT : feedbackToUser: String

    activate COMMANDRESULT COMMAND_COLOR
    COMMANDRESULT --[COMMAND_COLOR]> PARSER
    deactivate COMMANDRESULT

else else
    ADDCOMMAND --[COMMAND_COLOR]> PARSER
    deactivate ADDCOMMAND
end

deactivate PARSER

@enduml