@startuml
'https://plantuml.com/class-diagram

title Class Diagram of CafeCtrl `add_order` Command

CafeCtrl "1" --> "1" UI
CafeCtrl "1" --> "1" Parser
CafeCtrl "1" --> "1" Sales
CafeCtrl "1" --> "1" Pantry
CafeCtrl "1" --> "1" CurrentDate
CafeCtrl "1" o-- "*" Command

Command <|- AddOrderCommand
Parser "1" --> "*" AddOrderCommand
Parser ..> CurrentDate
Parser ..> Sales
AddOrderCommand --> OrderList
AddOrderCommand "1" --> "1" Chef
AddOrderCommand --> Pantry
AddOrderCommand ..> Order
OrderList --> "*" Order
Sales --> "1...*" OrderList
Chef ..> Pantry

class CafeCtrl {
- setup()
- run()
+ main(args : String[])
}

class Command {

}

class UI {
- scanner : Scanner
+ receiveUserInput() : String
+ showToUser() : void
+ showChefMessage() : void
+ showTotalCost(dollarCost : String) : void
}

class AddOrderCommand {
# pantry : Pantry
# menu : Menu
- ui : Ui
- order : Order
+ execute() : void
}

class Parser {
{static} + parseCommand(menu : Menu, userInput : String, ui : Ui, pantry : Pantry, sales : Sales, currentDate : CurrentDate) : Command
{static} - prepareOrder(menu : Menu, arguments : String, ui : Ui, pantry : Pantry, sales : Sales, currentDate : CurrentDate) : Command
{static} - setOrderList(currentDate : CurrentDate, sales : Sales)
}

class OrderList {
- orderList : ArrayList<Order>
- totalOrderListCost : float
+ addOrder() : void
+ addCost() : void
+ getTotalCost() : float
}

class Order {
- orderedDish : Dish
- dishQty : int
- ingredientList : ArrayList<Ingredient>
- isComplete : boolean
- totalOrderCost : float
- getDishPrice() : float
- setIngredientList() : ArrayList<Ingredient>
+ getIngredientList() : ArrayList<Ingredient>
+ getTotalOrderCost() : float
+ setComplete() : void
+ getIsComplete() : boolean
}

class Chef {
- order : Order
- pantry : Pantry
- ui : Ui
+ cookDish() : void
}

class Pantry {
- pantryStock : ArrayList<Ingredient>
- menuItems : ArrayList<Dish>
- ui : Ui
+ isDishCooked( :ArrayList<Ingredient>) : boolean
+ calculateDishAvailability(menu : Menu) : void
}

class Sales {
- orderLists : ArrayList<OrderList>
+ getOrderList(index : int) : OrderList
}

class CurrentDate {
- currentDay : int
+ getCurrentDay() : int
}

@enduml