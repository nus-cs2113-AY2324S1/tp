@startuml
!include style.puml
skinparam ArrowFontStyle plain

participant ":UseShortcutCommand" as UseShortcutCommand COMMAND_COLOR
participant "<<class>>\nShortcutParser" as ShortcutParser SHORTCUT_PARSER_COLOR
participant "shortcut:Shortcut" as Shortcut SHORTCUT_COLOR
participant "shortcuts:ShortcutList" as Shortcuts SHORTCUT_LIST_COLOR
participant "<<class>\nIngredientParser" as IngredientParser INGREDIENT_PARSER_COLOR
participant "ingredients:IngredientList" as Ingredients INGREDIENT_LIST_COLOR
participant ":Ingredient" as Ingredient INGREDIENT_COLOR
participant "<<class>>\nUi" as Ui UI_COLOR

[-> UseShortcutCommand : executeCommand()
activate UseShortcutCommand

UseShortcutCommand -> ShortcutParser : getShortcutIndex(shortcut, shortcutDetail)
activate ShortcutParser

ShortcutParser --> UseShortcutCommand
deactivate ShortcutParser

UseShortcutCommand -> Shortcuts : getShortcut(index)
activate Shortcuts

Shortcuts --> UseShortcutCommand
deactivate Shortcuts

UseShortcutCommand -> Shortcut : getIngredientName();
activate Shortcut

Shortcut --> UseShortcutCommand
deactivate Shortcut

UseShortcutCommand -> Shortcut : getQuantity();
activate Shortcut

Shortcut --> UseShortcutCommand
deactivate Shortcut

UseShortcutCommand -> IngredientParser : getIngredientIndex(ingredients, ingredientName)
activate IngredientParser

IngredientParser --> UseShortcutCommand
deactivate IngredientParser

UseShortcutCommand -> Ingredients : getIngredient(index)
activate Ingredients

Ingredients --> UseShortcutCommand
deactivate Ingredients

UseShortcutCommand -> Ingredient : getUnit()
activate Ingredient

Ingredient --> UseShortcutCommand
deactivate Ingredient

UseShortcutCommand -> Ingredients : updateIngredient(new Ingredient())
activate Ingredients

Ingredients -> Ui : printUpdateIngredientsSuccess();
activate Ui

Ui --> Ingredients
deactivate Ui

Ingredients --> UseShortcutCommand
deactivate Ingredients

[<-- UseShortcutCommand
deactivate UseShortcutCommand

@enduml